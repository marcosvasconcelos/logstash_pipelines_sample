input {
    beats {
        port => "5044"
    }
}

filter {

        grok {
              #Criar o diretório no $LOGSTASH_HOME nesse caso a instalação foi usando um rpm ou deb pack.
              # se foi utilizada a instalação por descompactação procure o diretório de instalação e crie
              # a o subdiretório chamado patterns.
              patterns_dir => ["/etc/logstash/patterns"]
              match => ["message", "%{ZABBIX_TEMPLATE}", "%{COMMONAPACHELOG}", "%{COMBINEDAPACHELOG}, %{SPRING_PATTERN}"]
              
        }
        
        ## Se você precisar de colocar o tempo de evento direcionado pelo zbx_time ou zbx_timestamp, modifique o target para @timestamp,
        ## isso fará os dados serem persistidos nos indices com as mesmas datas se forem indices datados e se usarem ao usar o padrão do 
        ## kibana para procurar a data será de maneira implícita, ou seja, não precisará de mudar o filed date de pesquisa padrão.
        date {
              match => [ "zbx_time" , "yyyy-MM-dd HH:mm:ssZ", "ISO8601", "yyyy-MM-dd HH:mm:ssZZ", "yyyy-MM-dd HH:mm:ssZZZ", "UNIX_MS", "yyyy-MM-dd HH:mm:ss.SSS", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.SSS-03:00", "yyyy-MM-dd" ]
              target => "@timestamp"
        }
        
        # Esse filtro faz uma data vinda como string ser persistida no Elasticsearch como field tipo date
        date {
              # Nesse match procurei quase todos os modelos que tenho de DATE para serem convertidos usando os padrões existentes no GROK e no LOGSTASH
              match => [ "zbx_timestamp" , "yyyy-MM-dd HH:mm:ssZ", "ISO8601", "yyyy-MM-dd HH:mm:ssZZ", "yyyy-MM-dd HH:mm:ssZZZ", "UNIX_MS", "yyyy-MM-dd HH:mm:ss.SSS", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.SSS-03:00", "yyyy-MM-dd" ]
              target => "zbx_timestamp"
        }
        #Idem ao anterior, apenas mudando o field de origem para zbx_time
        date {
              match => [ "zbx_time" , "yyyy-MM-dd HH:mm:ssZ", "ISO8601", "yyyy-MM-dd HH:mm:ssZZ", "yyyy-MM-dd HH:mm:ssZZZ", "UNIX_MS", "yyyy-MM-dd HH:mm:ss.SSS", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.SSS-03:00", "yyyy-MM-dd" ]
              target => "zbx_time"
        }
        

}
output {


    if [zbx_pid] {
        elasticsearch {
          hosts => ["http://elasticsearch:9200"]
          user => "elastic"
          password => "changeme"
          index => "zabbix_server-%{+YYYY.MM.dd}"
        }
    else{
        elasticsearch {
          hosts => ["http://elasticsearch:9200"]
          user => "elastic"
          password => "changeme"
          index => "apache-%{+YYYY.MM.dd}"
        }
    }
}
